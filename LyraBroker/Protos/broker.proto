syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "LyraBroker";

package broker;

service BrokerRPC {
  rpc CreateAccount (google.protobuf.Empty) returns (CreateAccountReply);
  rpc GetStatus (google.protobuf.Empty) returns (GetStatusReply);
  rpc GetBalance (GetBalanceRequest) returns (GetBalanceReply);
  rpc Send (SendRequest) returns (SendReply);
  rpc GetTransactions (GetTransactionsRequest) returns (GetTransactionsReply);
}

message CreateAccountReply {
	string privateKey = 1;
	string accountId = 2;
}

message GetStatusReply {
	bool isReady = 1;
	string networkId = 2;
}

message GetBalanceRequest {
	string privateKey = 1;
}

message GetBalanceReply {
	string accountId = 1;
	repeated LyraBalance balances = 2;
}

message LyraBalance{
	string ticker = 1;
	double balance = 2;
}

message SendRequest {
	string privateKey = 1;
	double amount = 2;
	string destAccountId = 3;
	string ticker = 4;
}

message SendReply {
	bool success = 1;
	string sendHash = 2;
}

message GetTransactionsRequest {
	string accountId = 1;
	google.protobuf.Timestamp startTime = 2;
	google.protobuf.Timestamp endTime = 3;
	int32 count = 4;
}

message GetTransactionsReply {
	repeated LyraTransaction Transactions = 1;
}

message LyraTransaction {
	int64 height = 1;
	google.protobuf.Timestamp time = 2;
	bool isReceive = 3;			// only send and receive for tx. 
	string sendAccountId = 4;	// sender's address
	string sendHash = 5;		
	string recvAccountId = 6;	// receiver's address
	string recvHash = 7;
	double balanceChange = 8;	// the delta of LYR balance, +d for receive, -d for send.
	double balance = 9;			// the balance of LYR
}